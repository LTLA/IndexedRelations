% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/standardizeFeatureSets.R
\name{standardizeFeatureSets}
\alias{standardizeFeatureSets}
\title{Standardize feature sets}
\usage{
standardizeFeatureSets(x, objects, clean = FALSE)
}
\arguments{
\item{x}{An IndexedRelations object.}

\item{objects}{A list of IndexedRelations object with the same number and classes of partners.}

\item{clean}{Logical scalar indicating whether the each of the feature sets should contain sorted and unique entries.}
}
\value{
A list containing \code{x} an IndexedRelations object;
and \code{objects}, a list of IndexedRelations objects with the same feature sets as \code{x}.
}
\description{
Standardize feature sets across comparable \linkS4class{IndexedRelations} objects.
}
\details{
This function is intended for use by developers of downstream packages.
The idea is to standardize the feature sets of different IndexedRelations objects,
thereby allowing direct comparison of the integer indices in downstream algorithms.

Setting \code{clean=TRUE} will sort and remove duplicates within each feature set.
This provides some structure that can be useful in some algorithms, 
e.g., ordering of partner indices reflects the ordering of the partner features.

In all cases, the \dQuote{as if} behaviour of the IndexedRelations class is unaffected,
i.e., the partner features are the same before and after running this function, 
even if the underlying representation is altered.
}
\examples{
library(GenomicRanges)
promoters <- GRanges("chrA", IRanges(1:10*20, 1:10*20+10))
enhancers <- GRanges("chrA", IRanges(1:20*10, 1:20*10+10))
partner1 <- sample(length(promoters), 100, replace=TRUE)
partner2 <- sample(length(enhancers), 100, replace=TRUE)

rel1 <- IndexedRelations(
    list(promoter=partner1, enhancer=partner2),
    featureSets=list(promoters=promoters, enhancers=enhancers)
)
rel2 <- IndexedRelations(
    list(promoter=partner1, enhancer=partner2),
    featureSets=list(promoters=rev(promoters), enhancers=rev(enhancers))
)

std.feat <- standardizeFeatureSets(rel1, list(rel2))
new.rel1 <- std.feat$x
new.rel2 <- std.feat$objects[[1]]
stopifnot(identical(featureSets(new.rel1), featureSets(new.rel2)))

}
\author{
Aaron Lun
\code{\link{cleanFeatureSets}}, to clean the feature sets for a single IndexedRelations object.
}
